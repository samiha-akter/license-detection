# -*- coding: utf-8 -*-
"""license-detect.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19oUayZt0jHAs0hYYdcIKOREQuOawmj0N
"""

!pip install easyocr numpy matplotlib imutils

# !pip install easyocr numpy matplotlib imutils
import cv2
import numpy as np
import matplotlib.pyplot as plt
import imutils
import easyocr
image = cv2.imread('5.jpg')


gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
filter = cv2.bilateralFilter(gray, 11, 17, 17)
edge = cv2.Canny(filter, 30, 200)
# plt.imshow(cv2.cvtColor(edge, cv2.COLOR_BGR2RGB))
ext_count = cv2.findContours(edge.copy(),cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
contours = imutils.grab_contours(ext_count)

contours = sorted(contours, key = cv2.contourArea, reverse=True)[:10]

location = None
for contour in contours:
            apprx=cv2.approxPolyDP(
                contour,10,True
            )
            if len(apprx)==4:
                location=apprx

                break
msk = np.zeros(gray.shape, np.uint8)

if location is not None:
    extracted_plate= cv2.drawContours(msk, [location], 0,255, -1)
    extracted_plate = cv2.bitwise_and(image, image, mask=msk)

    # plt.imshow(cv2.cvtColor(extracted_plate, cv2.COLOR_BGR2RGB))
    (x, y)= np.where(msk==255)

    (x1, y1) = (np.min(x), np.min(y))
    (x2, y2) = (np.max(x), np.max(y))

    final_plate = gray[x1:x2+1,
                   y1:y2+1]
# plt.imshow(cv2.cvtColor(final_plate, cv2.COLOR_BGR2RGB))
    read_char = easyocr.Reader(['bn','en']) #bangla character
    detected = read_char.readtext(final_plate)
    detected_texts = [region_info[1] for region_info in detected]
    print(detected_texts)
else:
    print("No license plate detected")
    exit()